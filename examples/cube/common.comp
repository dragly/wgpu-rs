struct DrawArguments {
    uint index_count;
    uint instance_count;
    uint base_index;
    int vertex_offset;
    uint base_instance;
};

struct Instance {
    vec4 position;
    vec4 size;
    uint sector_id;
    uint sector_offset;
};

struct Sector {
    vec4 position;
    vec4 size;
    uint sector_id;
    uint sector_offset;
};

struct Visibility {
    uint visibility;
    uint temp;
    uint padding;
    uint padding2;
};

layout(set = 0, binding = 0) buffer PrimeIndices {
    DrawArguments[] indices;
}; // this is used as both input and output for convenience
layout(set = 0, binding = 1) buffer Instances {
    Instance[] instances;
};
layout(set = 0, binding = 2) buffer Visibilities {
    Visibility[] visibility;
};
layout(set = 0, binding = 3) buffer VisibleInstances {
    Instance[] visibleInstances;
};
layout(set = 0, binding = 4) buffer GroupSums {
    uint[] groupSums;
};
layout(set = 0, binding = 5) buffer Sectors {
    Sector[] sectors;
};

layout(set = 1, binding = 0) uniform Locals {
    mat4 u_Transform;
};
layout(set = 1, binding = 1) uniform texture2D t_Color;
//layout(set = 1, binding = 1) uniform sampler2D t_Color;
layout(set = 1, binding = 2) uniform sampler s_Color;

